CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
PROJECT(PANORAMA)

SET(PANORAMA_VERSION_MAJOR 0)
SET(PANORAMA_VERSION_MINOR 2)
SET(PANORAMA_VERSION_PATCH 0)

OPTION(PANDORA "Build for Pandora")
OPTION(OPENGL "Enable OpenGL")
OPTION(POLTERGEIST "Test the event system with a poltergeist")

CONFIGURE_FILE(
    include/panoramaconfig.h.in
    include/panoramaconfig.h)

IF(PANDORA)
    MESSAGE("-- Compiling and packaging for the Pandora")
    INSTALL(DIRECTORY interfaces/ DESTINATION interfaces)
    SET(PLUGINDIR plugins)
ELSE(PANDORA)
    MESSAGE("-- Compiling and packaging for the Linux Desktop")
    INSTALL(DIRECTORY interfaces/ DESTINATION share/panorama/interfaces)
    SET(PLUGINDIR lib/panorama/plugins)
ENDIF(PANDORA)

IF(PANDORA)
    ADD_DEFINITIONS(-DPANDORA)
ENDIF(PANDORA)

IF(OPENGL)
    ADD_DEFINITIONS(-DENABLE_OPENGL)
    SET(QT_USE_QTOPENGL TRUE)
ENDIF(OPENGL)

IF(POLTERGEIST)
    ADD_DEFINITIONS(-DPOLTERGEIST)
ENDIF(POLTERGEIST)

INCLUDE_DIRECTORIES(${PANORAMA_SOURCE_DIR}/include/)
INCLUDE_DIRECTORIES(${PANORAMA_BINARY_DIR}/include/)

ADD_SUBDIRECTORY(deps)
ADD_SUBDIRECTORY(core)
ADD_SUBDIRECTORY(plugins)
ADD_SUBDIRECTORY(contrib)

SET(CPACK_PACKAGE_DESCRIPTION_SUMMARY "A vivid graphical user environment with a solid plugin architecture.")
SET(CPACK_PACKAGE_VENDOR "") # Change this when producing your own forks!
SET(CPACK_PACKAGE_VERSION_MAJOR ${PANORAMA_VERSION_MAJOR})
SET(CPACK_PACKAGE_VERSION_MINOR ${PANORAMA_VERSION_MINOR})
SET(CPACK_PACKAGE_VERSION_PATCH ${PANORAMA_VERSION_PATCH})
INCLUDE(CPack)

